Question:

The rules for generating Collatz Sequence are: If n is even: n = n / 2 If n is odd: n = 3n + 1 For example, if the starting number is 5 the sequence is: 5 -> 16 -> 8 -> 4 -> 2 -> 1 It has been proved for almost all integers, the repeated application of the above rule will result in a sequence that ends at 1.
Input format:

The input containing an integer 'n' which denotes the given number



Output format:

Print the numbers in the sequence and also print the number of times the rule has to be applied in order to reach 1.



Sample Input:

5



Sample Output:

5

16

8

4

2

1

5

Solution:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        int steps = collatzSequence(n);

        System.out.println(steps);
    }

    public static int collatzSequence(int n) {
        int count = 0;
        while (n != 1) {
            System.out.println(n);
            if (n % 2 == 0) {
                n /= 2;
            } else {
                n = 3 * n + 1;
            }
            count++;
        }
        System.out.println(n);  // Print the final 1
        return count;
    }
}
